name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  build-and-push-docker-images:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push httpapi image
        env:
          DB_CON: ${{ secrets.DB_CON }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          UNSPLASH_KEY: ${{ secrets.UNSPLASH_KEY }}
          RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
        run: |
          cd backend
          docker compose -f docker-compose.yml -f docker-compose.prod.yml build httpapi
          docker tag tomdra01/httpapi:prod tomdra01/httpapi:prod
          docker push tomdra01/httpapi:prod
      - name: Build and push wsapi image
        env:
          DB_CON: ${{ secrets.DB_CON }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          UNSPLASH_KEY: ${{ secrets.UNSPLASH_KEY }}
          RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
        run: |
          cd backend
          docker compose -f docker-compose.yml -f docker-compose.prod.yml build wsapi
          docker tag tomdra01/wsapi:prod tomdra01/wsapi:prod
          docker push tomdra01/wsapi:prod
      - name: Build and push frontend image
        env:
          DB_CON: ${{ secrets.DB_CON }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          UNSPLASH_KEY: ${{ secrets.UNSPLASH_KEY }}
          RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
        run: |
          cd backend
          docker compose -f docker-compose.yml -f docker-compose.prod.yml build frontend --build-arg configuration=production
          docker tag tomdra01/frontend:prod tomdra01/frontend:prod
          docker push tomdra01/frontend:prod

  trigger-update-and-deploy:
    name: Deploy to Production environment
    needs: [ build-and-push-docker-images ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Trigger update
        run: |
          curl --fail -X GET 'http://167.86.96.91:8090/v1/update' -H 'Authorization: Bearer ${{ secrets.WATCHTOWERTOKEN }}'

      - name: Cooldown 10s
        run: sleep 10

  database-migration:
    name: Database Migration
    runs-on: ubuntu-latest
    needs: [ trigger-update-and-deploy ]
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v1
      - run: |
          cd backend
          sleep 10
          docker compose up flyway